spring.application.name=cards-service
spring.config.import=configserver:
spring.cloud.config.uri=http://localhost:8888
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8091/realms/nttdatabank

#mover a properties config - repo
# Resilience4j TimeLimiter
resilience4j.timelimiter.timeout-seconds=2

# Redis
spring.redis.host=localhost
spring.redis.port=6379
# TTLs de cache
cache.cards.card-by-id.ttl=PT5M
cache.cards.primary-balance.ttl=PT30S
cache.cards.movements.ttl=PT45S

#Sonarqube
sonar.projectKey=cards_service
sonar.projectName=cards_service
sonar.projectVersion=0.0.1
sonar.sourceEncoding=UTF-8
sonar.host.url=http://localhost:9000
# token via  -Dsonar.login o variable de entorno SONAR_TOKEN
sonar.sources=src/main/java,src/main/resources
sonar.tests=src/test/java
sonar.java.binaries=target/classes
sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
sonar.exclusions=target/generated-sources/openapi/**, **/com/nttdata/cards_service/api/*Api*.java, **/com/nttdata/cards_service/model/*, **/*Application.java


#sonar.exclusions=**/com/nttdata/cards_service/model/**,**/com/nttdata/cards_service/config/**,**/*Application.java
sonar.junit.reportPaths=target/surefire-reports

# Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=cards-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.concurrency=3

# Deserializadores con manejo de error
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# JSON (producer)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

# JSON (consumer)
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.nttdata.cards_service.kafka.events.CardLinkRequestEvent
spring.kafka.consumer.properties.spring.json.trusted.packages=com.nttdata.cards_service.kafka.events

# Topicos
app.topics.card-link-request=yanki.wallet.card.link.request
app.topics.card-link-result=yanki.wallet.card.link.result
# Topicos Yanki (pagos P2P por tarjeta DEBIT)
app.topics.card-debit-req=bank.card.debit.requested
app.topics.card-debit-applied=bank.card.debit.applied
app.topics.card-debit-denied=bank.card.debit.denied
app.topics.card-credit-req=bank.card.credit.requested
app.topics.card-credit-applied=bank.card.credit.applied
app.topics.card-credit-denied=bank.card.credit.denied
#  saldo principal actualizado
app.topics.card-primary-balance-updated=bank.card.primary-balance.updated

