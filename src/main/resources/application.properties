spring.application.name=cards_service
spring.config.import=configserver:
spring.cloud.config.uri=http://localhost:8888

# Resilience4j TimeLimiter
resilience4j.timelimiter.timeout-seconds=2


#Sonarqube
sonar.projectKey=cards_service
sonar.projectName=cards_service
sonar.projectVersion=0.0.1
sonar.sourceEncoding=UTF-8
sonar.host.url=http://localhost:9000

# token via  -Dsonar.login o variable de entorno SONAR_TOKEN
sonar.sources=src/main/java,src/main/resources
sonar.tests=src/test/java
sonar.java.binaries=target/classes
sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
sonar.exclusions=target/generated-sources/openapi/**, **/com/nttdata/cards_service/api/*Api*.java, **/com/nttdata/cards_service/model/*, **/*Application.java

#sonar.exclusions=**/com/nttdata/cards_service/model/**,**/com/nttdata/cards_service/config/**,**/*Application.java
sonar.junit.reportPaths=target/surefire-reports

# Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=cards-group
spring.kafka.consumer.auto-offset-reset=earliest

# JSON (consumer)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.nttdata.cards_service.kafka.dto.CardLinkRequestEvent

# JSON (producer)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# TÃ³picos
app.topics.card-link-request=yanki.wallet.card.link.request.v1
app.topics.card-link-result=yanki.wallet.card.link.result.v1